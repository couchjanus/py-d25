# Сложные списковые включения
# Циклы могут иметь несколько уровней вложенности, что относится и к генераторам списков. 

# Приведение «многомерного» объекта к «одномерному»
# Представим список из слов, который мы хотим привести к сплошному списку из букв. 

words = ['Я', 'изучаю', 'Python']  # Список слов
letters = [letter for word in words for letter in word]  # Двойная итерация: по словам и по буквам
print(letters)  # ['Я', 'и', 'з', 'у', 'ч', 'а', 'ю', 'P', 'y', 't', 'h', 'o', 'n']

# Генерация таблицы умножения от 1 до 5
# Списковые включения могут генерировать список списков. 
# Попробуем сформировать таблицу умножения чисел от 1 до 5. 

table = [[x * y for x in range(1, 6)] for y in range(1, 6)]
print(table)
# [[1, 2, 3, 4, 5],
#  [2, 4, 6, 8, 10],
#  [3, 6, 9, 12, 15],
#  [4, 8, 12, 16, 20],
#  [5, 10, 15, 20, 25]]

