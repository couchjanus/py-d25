# Включение вложенного списка, 
# в отличие от включения списка с вложенными циклами, 
# являются включение списка в пределах включения списка. 
# Начальным выражением может быть любое произвольное выражение, 
# включая другое включение.

#Списковое включение с вложенным циклом
[x + y for x in [1, 2, 3] for y in [3, 4, 5]]
#Out: [4, 5, 6, 5, 6, 7, 6, 7, 8]

#Вложенное списковое включение
[[x + y for x in [1, 2, 3]] for y in [3, 4, 5]]
#Out: [[4, 5, 6], [5, 6, 7], [6, 7, 8]]

 
# Вложенный пример эквивалентен
l = []
for y in [3, 4, 5]:
    temp = []
    for x in [1, 2, 3]:
        temp.append(x + y)
    l.append(temp)
# пример, где вложенное списковое включение может быть использовано 
# для транспонирования матрицы.

matrix = [[1,2,3],
          [4,5,6],
          [7,8,9]] 

[[row[i] for row in matrix] for i in range(len(matrix))]
# Out: [[1, 4, 7], [2, 5, 8], [3, 6, 9]]

# Как и вложенные for петель, есть не предел того, 
# как глубоко постижения могут быть вложенными.

[[[i + j + k for k in 'cd'] for j in 'ab'] for i in '12']
# Out: [[['1ac', '1ad'], ['1bc', '1bd']], [['2ac', '2ad'], ['2bc', '2bd']]] 

# Итерация двух или более списков одновременно в пределах понимания списка
# Для перебора более двух списков одновременно в списковым включении, 
# можно использовать zip() , как:

list_1 = [1, 2, 3 , 4]
list_2 = ['a', 'b', 'c', 'd']
list_3 = ['6', '7', '8', '9']

# 2 списка
[(i, j) for i, j in zip(list_1, list_2)]

# Out:[(1, 'a'), (2, 'b'), (3, 'c'), (4, 'd')]

# 3 списка
[(i, j, k) for i, j, k in zip(list_1, list_2, list_3)]
# Out:[(1, 'a', '6'), (2, 'b', '7'), (3, 'c', '8'), (4, 'd', '9')]

