# 01.open.close.file.test.py
# Методы файла Python
 
# Файловый объект создается с использованием функции open
# Open a file

# r:   Открывает файл только для чтения. Указатель стоит в начале файла.
# rb: Открывает файл для чтения в двоичном формате. Указатель стоит в начале файла.
# r+: Открывает файл для чтения и записи. Указатель стоит в начале файла.
# rb+:Открывает файл для чтения и записи в двоичном формате. Указатель стоит в начале файла.
# w: Открывает файл только для записи. Указатель стоит в начале файла. Создает файл с именем имя_файла, если такового не существует.
# wb: Открывает файл для записи в двоичном формате. Указатель стоит в начале файла. Создает файл с именем имя_файла, если такового не существует.
# w+: Открывает файл для чтения и записи. Указатель стоит в начале файла. Создает файл с именем имя_файла, если такового не существует.
# wb+:	Открывает файл для чтения и записи в двоичном формате. Указатель стоит в начале файла. Создает файл с именем имя_файла, если такового не существует.
# a:	Открывает файл для добавления информации в файл. Указатель стоит в конце файла. Создает файл с именем имя_файла, если такового не существует.
# ab:	Открывает файл для добавления в двоичном формате. Указатель стоит в конце файла. Создает файл с именем имя_файла, если такового не существует.
# a+:	Открывает файл для добавления и чтения. Указатель стоит в конце файла. Создает файл с именем имя_файла, если такового не существует.
# ab+:	Открывает файл для добавления и чтения в двоичном формате. Указатель стоит в конце файла. Создает файл с именем имя_файла, если такового не существует.

# Режимы могут быть объединены, то есть, к примеру, 'rb' - чтение в двоичном режиме. По умолчанию режим равен 'rt'.
# Аргумент,  encoding, нужен только в текстовом режиме чтения файла. Этот аргумент задает кодировку.
# Режим '+' может быть добавлен к остальным режимам. По умолчанию Python открывает файлы в текстовом режиме. Для открытия файла в бинарном режиме на чтение можно добавить 'rb'. Третий параметр устанавливает размер буферизации при работе с файлом. По умолчанию он выключен, и чтение/запись идет напрямую с диска на диск. Для включения буфера третий параметр должен быть отличным от нуля.

fo = open("foo.txt", "wb")
print ("Name of the file: ", fo.name)
# Name of the file:  foo.txt

# список функций, которые можно вызвать для этого объекта:

# file.close ()
# Закройте файл. Закрытый файл больше не может быть прочитан или записан.

# Close opened file
fo.close()

# Python автоматически закрывает файл 
# если файловый объект к которому он привязан присваивается другому файлу. 
# Однако, хорошей практикой будет вручную закрывать файл командой close().

my_file = open("LICENSE", "r")
print(f"Имя файла: {my_file.name}")
print(f"Файл {my_file.name} закрыт: {my_file.closed}")
my_file.close()
print(f"А теперь файл {my_file.name} закрыт: {my_file.closed}")

